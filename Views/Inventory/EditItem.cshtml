@model InventoryManagement.ViewModels.EditItemViewModel
@{
    ViewData["Title"] = $"Edit Item - {Model.InventoryTitle}";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-header bg-warning text-dark">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>Edit Item in @Model.InventoryTitle
                    </h4>
                </div>
                <div class="card-body">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="InventoryId" />
                        <input type="hidden" asp-for="Version" />
                        
                        <div class="mb-3">
                            <label asp-for="CustomId" class="form-label"></label>
                            <input asp-for="CustomId" class="form-control" />
                            <span asp-validation-for="CustomId" class="text-danger"></span>
                        </div>
                        
                        <hr />
                        
                        <h5 class="mb-3">Custom Fields</h5>
                        
                        @if (Model.CustomFields.Any())
                        {
                            @foreach (var field in Model.CustomFields)
                            {
                                <div class="mb-3">
                                    <label class="form-label">@field.Name</label>
                                    
                                    @switch (field.Type)
                                    {
                                        case "string":
                                            <input type="text" class="form-control" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].StringValue"
                                                   value="@field.StringValue" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Type" 
                                                   value="@field.Type" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Index" 
                                                   value="@field.Index" />
                                            break;
                                            
                                        case "text":
                                            <textarea class="form-control" rows="3"
                                                      name="CustomFields[@(Model.CustomFields.IndexOf(field))].TextValue">@field.TextValue</textarea>
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Type" 
                                                   value="@field.Type" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Index" 
                                                   value="@field.Index" />
                                            break;
                                            
                                        case "number":
                                            <input type="number" step="0.01" class="form-control"
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].NumberValue"
                                                   value="@field.NumberValue" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Type" 
                                                   value="@field.Type" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Index" 
                                                   value="@field.Index" />
                                            break;
                                            
                                        case "bool":
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input"
                                                       name="CustomFields[@(Model.CustomFields.IndexOf(field))].BoolValue"
                                                       value="true" @(field.BoolValue == true ? "checked" : "") />
                                                <label class="form-check-label">Yes</label>
                                                <input type="hidden" 
                                                       name="CustomFields[@(Model.CustomFields.IndexOf(field))].Type" 
                                                       value="@field.Type" />
                                                <input type="hidden" 
                                                       name="CustomFields[@(Model.CustomFields.IndexOf(field))].Index" 
                                                       value="@field.Index" />
                                            </div>
                                            break;
                                            
                                        case "file":
                                            <input type="url" class="form-control"
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].FileValue"
                                                   value="@field.FileValue" 
                                                   placeholder="https://example.com/file.pdf" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Type" 
                                                   value="@field.Type" />
                                            <input type="hidden" 
                                                   name="CustomFields[@(Model.CustomFields.IndexOf(field))].Index" 
                                                   value="@field.Index" />
                                            <div class="form-text">Enter a URL to the file or image.</div>
                                            break;
                                    }
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                No custom fields are defined for this inventory.
                            </div>
                        }
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Items" asp-route-id="@Model.InventoryId" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to Items
                            </a>
                            <div>
                                <button type="submit" class="btn btn-warning">
                                    <i class="fas fa-save me-1"></i>Update Item
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}