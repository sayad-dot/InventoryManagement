@model InventoryManagement.ViewModels.ItemsTableViewModel
@{
    ViewData["Title"] = $"Items - {Model.InventoryTitle}";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-cubes me-2"></i>@Model.InventoryTitle - Items
                    </h4>
                    <div>
                        <a asp-action="Details" asp-route-id="@Model.InventoryId" class="btn btn-outline-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Back to Inventory
                        </a>
                        @if (Model.CanEdit)
                        {
                            <a asp-action="CreateItem" asp-route-id="@Model.InventoryId" class="btn btn-light btn-sm">
                                <i class="fas fa-plus me-1"></i>Add Item
                            </a>
                        }
                    </div>
                </div>
                
                <div class="card-body">
                    @if (TempData["SuccessMessage"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["SuccessMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }
                    
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        @foreach (var header in Model.ColumnHeaders)
                                        {
                                            <th>@header</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@(item.CustomId ?? "N/A")</strong>
                                            </td>
                                            @foreach (var field in item.CustomFields)
                                            {
                                                <td>
                                                    @switch (field.Type)
                                                    {
                                                        case "string":
                                                            <span>@field.StringValue</span>
                                                            break;
                                                        case "text":
                                                            <span class="text-truncate" style="max-width: 200px;" 
                                                                  title="@field.TextValue">@(field.TextValue?.Length > 50 ? field.TextValue.Substring(0, 50) + "..." : field.TextValue)</span>
                                                            break;
                                                        case "number":
                                                            <span>@field.NumberValue?.ToString("N2")</span>
                                                            break;
                                                        case "bool":
                                                            <span class="badge bg-@(field.BoolValue == true ? "success" : "secondary")">
                                                                @(field.BoolValue == true ? "Yes" : "No")
                                                            </span>
                                                            break;
                                                        case "file":
                                                            @if (!string.IsNullOrEmpty(field.FileValue))
                                                            {
                                                                <a href="@field.FileValue" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                    <i class="fas fa-external-link-alt"></i>
                                                                </a>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">No file</span>
                                                            }
                                                            break;
                                                    }
                                                </td>
                                            }
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    @if (item.CanEdit)
                                                    {
                                                        <a asp-action="EditItem" asp-route-id="@item.Id" 
                                                           class="btn btn-outline-primary" title="Edit">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <form asp-action="DeleteItem" method="post" class="d-inline">
                                                            <input type="hidden" name="id" value="@item.Id" />
                                                            <button type="submit" class="btn btn-outline-danger" 
                                                                    title="Delete" onclick="return confirm('Are you sure you want to delete this item?')">
                                                                <i class="fas fa-trash"></i>
                                                            </button>
                                                        </form>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">View Only</span>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
                            <h5>No items yet</h5>
                            <p class="text-muted">Get started by adding the first item to this inventory.</p>
                            @if (Model.CanEdit)
                            {
                                <a asp-action="CreateItem" asp-route-id="@Model.InventoryId" class="btn btn-primary">
                                    <i class="fas fa-plus me-1"></i>Add First Item
                                </a>
                            }
                        </div>
                    }
                </div>
                
                @if (Model.Items.Any())
                {
                    <div class="card-footer">
                        <small class="text-muted">
                            Showing @Model.Items.Count items
                            @if (Model.CanEdit)
                            {
                                <span> â€¢ </span>
                                <a asp-action="CreateItem" asp-route-id="@Model.InventoryId" class="text-decoration-none">
                                    <i class="fas fa-plus me-1"></i>Add Another Item
                                </a>
                            }
                        </small>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Add any JavaScript needed for item management
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize tooltips if needed
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[title]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}