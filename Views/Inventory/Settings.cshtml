@model InventoryManagement.ViewModels.EditInventoryViewModel
@{
    ViewData["Title"] = "Inventory Settings - " + Model.Title;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h4 class="card-title mb-0">Inventory Settings - @Model.Title</h4>
                    <div>
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-light btn-sm">Back to Inventory</a>
                    </div>
                </div>
                
                <!-- Tabs -->
                <ul class="nav nav-tabs" id="settingsTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="basic-tab" data-bs-toggle="tab" data-bs-target="#basic" type="button" role="tab">
                            Basic Info
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="fields-tab" data-bs-toggle="tab" data-bs-target="#fields" type="button" role="tab">
                            Custom Fields
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="access-tab" data-bs-toggle="tab" data-bs-target="#access" type="button" role="tab">
                            Access Control
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="settingsTabsContent">
                    <!-- Basic Info Tab -->
                    <div class="tab-pane fade show active" id="basic" role="tabpanel">
                        <div class="card-body">
                            @if (TempData["SuccessMessage"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    @TempData["SuccessMessage"]
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>
                            }

                            <form method="post" asp-action="UpdateBasicSettings">
                                <input type="hidden" asp-for="Id" />
                                
                                <div class="mb-3">
                                    <label asp-for="Title" class="form-label"></label>
                                    <input asp-for="Title" class="form-control" />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="Description" class="form-label"></label>
                                    <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="CategoryId" class="form-label"></label>
                                    <select asp-for="CategoryId" class="form-select" asp-items="@(new SelectList(Model.AvailableCategories, "Id", "Name"))">
                                        <option value="">Select a category</option>
                                    </select>
                                </div>
                                
                                <div class="mb-3">
                                    <label asp-for="ImageUrl" class="form-label"></label>
                                    <input asp-for="ImageUrl" class="form-control" />
                                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                                </div>
                                
                                <div class="mb-3 form-check">
                                    <input asp-for="IsPublic" class="form-check-input" />
                                    <label asp-for="IsPublic" class="form-check-label">Make this inventory public (all authenticated users can add items)</label>
                                </div>
                                
                                <button type="submit" class="btn btn-primary">Save Changes</button>
                            </form>
                        </div>
                    </div>

                    <!-- Custom Fields Tab -->
                    <div class="tab-pane fade" id="fields" role="tabpanel">
                        <div class="card-body">
                            <div class="mb-4">
                                <h5>Manage Custom Fields</h5>
                                <p class="text-muted">Define the data fields for items in this inventory. You can have up to 3 fields of each type.</p>
                            </div>

                            <form method="post" asp-action="UpdateCustomFields" id="customFieldsForm">
                                <input type="hidden" asp-for="Id" />
                                <input type="hidden" id="FieldOrder" name="FieldOrder" value="@Model.FieldOrder" />

                                <div id="customFieldsContainer">
                                    @foreach (var field in Model.CustomFields)
                                    {
                                        <div class="card mb-3 field-item" data-field-type="@field.Type" data-field-index="@field.Index">
                                            <div class="card-header d-flex justify-content-between align-items-center">
                                                <div>
                                                    <i class="fas @GetFieldTypeIcon(field.Type) me-2"></i>
                                                    <strong>@GetFieldTypeDisplayName(field.Type) Field @field.Index</strong>
                                                </div>
                                                <div>
                                                    <button type="button" class="btn btn-sm btn-outline-secondary me-1 move-up">
                                                        <i class="fas fa-arrow-up"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-secondary me-1 move-down">
                                                        <i class="fas fa-arrow-down"></i>
                                                    </button>
                                                    <div class="form-check form-switch d-inline-block me-2">
                                                        <input class="form-check-input field-active" type="checkbox" 
                                                               name="CustomFields[@GetFieldIndex(field.Type, field.Index)].IsActive" 
                                                               value="true" @(field.IsActive ? "checked" : "")>
                                                        <input type="hidden" name="CustomFields[@GetFieldIndex(field.Type, field.Index)].IsActive" value="false">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-md-8">
                                                        <div class="mb-3">
                                                            <label class="form-label">Field Name</label>
                                                            <input type="text" class="form-control field-name" 
                                                                   name="CustomFields[@GetFieldIndex(field.Type, field.Index)].Name" 
                                                                   value="@field.Name" 
                                                                   placeholder="Enter field name (e.g., 'Model', 'Price')">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="mb-3">
                                                            <label class="form-label">Field Type</label>
                                                            <input type="text" class="form-control" value="@GetFieldTypeDisplayName(field.Type)" readonly>
                                                            <input type="hidden" name="CustomFields[@GetFieldIndex(field.Type, field.Index)].Type" value="@field.Type">
                                                            <input type="hidden" name="CustomFields[@GetFieldIndex(field.Type, field.Index)].Index" value="@field.Index">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>

                                <button type="submit" class="btn btn-primary">Save Field Configuration</button>
                            </form>
                        </div>
                    </div>

                    <!-- Access Control Tab -->
                    <div class="tab-pane fade" id="access" role="tabpanel">
                        <div class="card-body">
                            <h5>Access Control</h5>
                            <p class="text-muted">Manage who can add items to this inventory.</p>
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> Access control features will be available in Phase 4.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Field management JavaScript
        document.addEventListener('DOMContentLoaded', function() {
            // Move field up
            document.querySelectorAll('.move-up').forEach(button => {
                button.addEventListener('click', function() {
                    const card = this.closest('.field-item');
                    const prevCard = card.previousElementSibling;
                    if (prevCard) {
                        card.parentNode.insertBefore(card, prevCard);
                        updateFieldOrder();
                    }
                });
            });

            // Move field down
            document.querySelectorAll('.move-down').forEach(button => {
                button.addEventListener('click', function() {
                    const card = this.closest('.field-item');
                    const nextCard = card.nextElementSibling;
                    if (nextCard) {
                        card.parentNode.insertBefore(nextCard, card);
                        updateFieldOrder();
                    }
                });
            });

            function updateFieldOrder() {
                const fields = document.querySelectorAll('.field-item');
                const order = Array.from(fields).map(field => {
                    const type = field.getAttribute('data-field-type');
                    const index = field.getAttribute('data-field-index');
                    return `${type}_${index}`;
                });
                document.getElementById('FieldOrder').value = order.join(',');
            }

            // Initialize field order
            updateFieldOrder();
        });
    </script>
}

@functions {
    private string GetFieldTypeIcon(string type)
    {
        return type switch
        {
            "string" => "fa-font",
            "text" => "fa-align-left",
            "number" => "fa-hashtag",
            "bool" => "fa-toggle-on",
            "file" => "fa-file",
            _ => "fa-question"
        };
    }

    private string GetFieldTypeDisplayName(string type)
    {
        return type switch
        {
            "string" => "Single-line Text",
            "text" => "Multi-line Text",
            "number" => "Number",
            "bool" => "True/False",
            "file" => "File/Image URL",
            _ => type
        };
    }

    private int GetFieldIndex(string type, int index)
    {
        return type switch
        {
            "string" => index - 1,
            "text" => index + 2,
            "number" => index + 5,
            "bool" => index + 8,
            "file" => index + 11,
            _ => 0
        };
    }
}