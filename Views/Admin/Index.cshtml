@model List<InventoryManagement.ViewModels.UserManagementViewModel>
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-users-cog me-2"></i>User Management
                    </h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="usersTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Email</th>
                                    <th>Full Name</th>
                                    <th>Status</th>
                                    <th>Admin</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr id="user-@user.Id">
                                        <td>@user.Email</td>
                                        <td>@user.FullName</td>
                                        <td>
                                            @if (user.IsBlocked)
                                            {
                                                <span class="badge bg-danger">Blocked</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                        </td>
                                        <td>
                                            @if (user.IsAdmin)
                                            {
                                                <span class="badge bg-primary">Admin</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">User</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <button type="button" class="btn btn-outline-warning toggle-block" data-user-id="@user.Id">
                                                    @(user.IsBlocked ? "Unblock" : "Block")
                                                </button>
                                                <button type="button" class="btn btn-outline-info toggle-admin" data-user-id="@user.Id">
                                                    @(user.IsAdmin ? "Remove Admin" : "Make Admin")
                                                </button>
                                                <button type="button" class="btn btn-outline-danger delete-user" data-user-id="@user.Id">Delete</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle block
            document.querySelectorAll('.toggle-block').forEach(button => {
                button.addEventListener('click', function() {
                    const userId = this.getAttribute('data-user-id');
                    toggleBlock(userId);
                });
            });

            // Toggle admin
            document.querySelectorAll('.toggle-admin').forEach(button => {
                button.addEventListener('click', function() {
                    const userId = this.getAttribute('data-user-id');
                    toggleAdmin(userId);
                });
            });

            // Delete user
            document.querySelectorAll('.delete-user').forEach(button => {
                button.addEventListener('click', function() {
                    const userId = this.getAttribute('data-user-id');
                    deleteUser(userId);
                });
            });

            function toggleBlock(userId) {
                fetch(`/Admin/ToggleBlock?userId=${userId}`, { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            alert('Failed to toggle block.');
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }

            function toggleAdmin(userId) {
                fetch(`/Admin/ToggleAdmin?userId=${userId}`, { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            response.text().then(text => alert(text));
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }

            function deleteUser(userId) {
                if (!confirm('Are you sure you want to delete this user? This action cannot be undone.')) {
                    return;
                }

                fetch(`/Admin/DeleteUser?userId=${userId}`, { method: 'POST' })
                    .then(response => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            response.text().then(text => alert(text));
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        });
    </script>
}